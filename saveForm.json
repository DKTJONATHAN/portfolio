const fs = require('fs');
const path = require('path');

exports.handler = async (event) => {
    try {
        const data = JSON.parse(event.body);
        
        // Validate required fields
        if (!data.name || !data.email || !data.message || !data.service) {
            return {
                statusCode: 400,
                body: JSON.stringify({ message: 'Missing required fields' })
            };
        }
        
        // Add timestamp
        data.timestamp = new Date().toISOString();
        
        // Determine if this is a form submission or subscriber
        const isForm = data.type === 'New Client Alert!';
        const filePath = path.join(process.cwd(), isForm ? 'forms.json' : 'subscribers.json');
        
        // Read existing data
        let existingData = [];
        try {
            const fileData = fs.readFileSync(filePath, 'utf8');
            existingData = JSON.parse(fileData);
        } catch (err) {
            if (err.code !== 'ENOENT') throw err;
        }
        
        // Add new data
        existingData.push(data);
        
        // Write back to file
        fs.writeFileSync(filePath, JSON.stringify(existingData, null, 2));
        
        return {
            statusCode: 200,
            body: JSON.stringify({ message: 'Data saved successfully' })
        };
    } catch (error) {
        return {
            statusCode: 500,
            body: JSON.stringify({ message: 'Error saving data', error: error.message })
        };
    }
}; 